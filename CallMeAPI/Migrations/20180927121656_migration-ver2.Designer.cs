// <auto-generated />
using System;
using CallMeAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CallMeAPI.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20180927121656_migration-ver2")]
    partial class migrationver2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CallMeAPI.Models.EventLog", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventDesc");

                    b.Property<string>("EventType");

                    b.Property<string>("IP");

                    b.Property<string>("PhoneNumber");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<Guid>("WidgetID");

                    b.HasKey("ID");

                    b.HasIndex("WidgetID");

                    b.ToTable("EventLogs");
                });

            modelBuilder.Entity("CallMeAPI.Models.User", b =>
                {
                    b.Property<string>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsFirstLogon");

                    b.Property<DateTime?>("LastLogon");

                    b.Property<string>("Password");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CallMeAPI.Models.Widget", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ColorText");

                    b.Property<string>("ColorWidget");

                    b.Property<string>("ConnectedTo");

                    b.Property<bool>("IsAnimated");

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.Property<string>("TalkToUsText");

                    b.Property<string>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Widgets");
                });

            modelBuilder.Entity("CallMeAPI.Models.EventLog", b =>
                {
                    b.HasOne("CallMeAPI.Models.Widget", "Widget")
                        .WithMany()
                        .HasForeignKey("WidgetID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CallMeAPI.Models.Widget", b =>
                {
                    b.HasOne("CallMeAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
